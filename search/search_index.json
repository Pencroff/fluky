{"config":{"lang":["en"],"separator":"[\\s\\-,:!=\\[\\]()\"/]+|(?!\\b)(?=[A-Z][a-z])|\\.(?!\\d)|&[lg]t;","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":"<p>Happening by or depending on chance in Golang.</p>"},{"location":"#overview","title":"Overview","text":"<p>Fluky Library offers a wide range of methods to generate various types of random values. It relies on the standard <code>rand.Rand</code> located in <code>math/rand</code> and includes several random number generators such as pcg, small prng, splitmix64, xoshiro256++, and xoshiro256**.  These generators have been evaluated for their quality using the <code>dieharder</code> test suite.</p> <p>Please check dieharder results in repo.</p>"},{"location":"#install","title":"Install","text":"<pre><code>go get -u github.com/Pencroff/fluky\n</code></pre>"},{"location":"#usage-example","title":"Usage example","text":"<pre><code>package main\nimport (\n\"fmt\"\n\"github.com/Pencroff/fluky\"\nsrc \"github.com/Pencroff/fluky/source\"\n\"math/rand\"\n)\nfunc main() {\ns := src.NewPcgSource(0)\nr := rand.New(s)\nflk := fluky.NewFluky(r)\nfmt.Println(flk.Uint64())\n}\n</code></pre>"},{"location":"sources/","title":"External Sources","text":"<p>All sources implement the <code>Source</code> and <code>Source64</code> interface from <code>math/rand</code> package.</p>"},{"location":"sources/#splitmix64-ref","title":"SplitMix64 (ref)","text":"<p>The SplitMix64 generator is a simple, fast generator for 64-bit numbers. It is a very fast generator passing BigCrush without systematic failures, but due to the relatively short period it is acceptable only for applications with a mild amount of parallelism; otherwise, use a xorshift or pcg generator.</p> <p>Current implementations of <code>xoshiro256++</code> and <code>xoshiro256**</code> use <code>SplitMix64</code> as a seed generator.</p> <p>The type of <code>state</code> is <code>uint64</code>.</p> SplitMix64 implementation <pre><code>func (s *SplitMix64Source) Uint64() uint64 {\ns.state += 0x9e3779b97f4a7c15\nz := s.state\nz ^= z &gt;&gt; 30\nz *= 0xbf58476d1ce4e5b9\nz ^= z &gt;&gt; 27\nz *= 0x94d049bb133111eb\nz ^= z &gt;&gt; 31\nreturn z\n}\n</code></pre>"}]}